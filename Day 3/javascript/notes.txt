<<<<<<< HEAD
###
    inside chrome -> there is a javascript engine known as V8 Engine
    inside mozilla -> there is a javascript engine known as spider monkey
    Edge -> there are a javascript engine known as Chakra


    some engine are doing 
        -> interpret and compile    ->    JIST (just in time)



    alg alg browser pe alg alg js render 
        but ECMASCRIPT came into picture to define default behaviour
    
    extension --> .js

    sepration of concern -> alg alg file ko seprate rakhana


###
        variable
            var     ES5  || function-scoped  || redeclared reassign
            let     ES6  || braces-scoped    || no-redeclared reassign
            const   ES6  || braces-scoped    || no-redeclared no-reassign

###
    js is 
        loosely bound ->  can add diffrent type
        tightly bound  ->   not add different type only add similar datatype

        dynamically typed -> datatype decide at runtime 
        statically typed ->  datatype decide at decalariation time


###
    datatype   can check using -> typeof()
        string
        number 
        Bigint
        Boolean 
        Null 
        undefined
        array
        oject
        date


###
    mutable   ->  you can change  
    immutable ->  you can't chanage

###
    array
        let arr[];
        can have multiple type datatype

###
    type cohension
        12 + '12' = '1212'
        12 + +'12' = 24    
        20 - '12' = 8  
        12 * '12' = NaN     

###
    parseInt -> convert '123' to 123   also done '12a' -> 12
    Number -> convert '123' to 123   but not '12a' -> NaN 


###
    ==          -> only check value
    ===         -> check datatype , value   (prefered in industry)

    in case of spread operator (...a)
      then 
        ==         -> check value and refrence
        ===        -> check value datatype and refrence

    same with 
        !=
        !==


###
    backtick -->  (` `)
    var msg = "byeee..."
    const str = `Hii msg is : ${msg}`;


###
    function    
        first read and then a new progaram is create in which there is function call 

        function print(x){
        console.log(x);
        }   

        var x = 20;
        print(x);

###
    Logical operator
        && 		|| 		!


###
    falsy value  
        0 false null undefined  NaN str=''


###
    switch case 



### 
    object
        key value pair 
        exp
            const obj = {
            name: "ashu",
            roll: 12,
            };

    to change object 
        obj.name = "sadfsf";


###
    alert   -> gave a message on page rendering 
    prompt  -> 
=======
###
    inside chrome -> there are a javascript engine known as V8 Engine
    inside mozilla -> there are a javascript engine known as spider monkey
    Edge -> there are a javascript engine known as Chakra


    some engine are doing 
        -> interpret and compile    ->    JIST (just in time)



    alg alg browser pe alg alg js render 
        but ECMASCRIPT came into picture to define default behaviour
    
    extension --> .js

    sepration of concern -> alg alg file ko seprate rakhan


###
        variable
            var     ES5  || function-scoped  || redeclared reassign
            let     ES6  || braces-scoped    || no-redeclared reassign
            const   ES6  || braces-scoped    || no-redeclared no-reassign

###
    js is 
        loosely typed ->  can add diffrent type
        tightly typed  ->   not add different type only add similar datatype

        dynamically typed -> datatype decide at runtime 
        statically typed ->  datatype decide at decalariation time


###
    datatype   can check using -> typeof()
        string
        number 
        Bigint
        Boolean 
        Null 
        array
        oject
        date


###
    mutable   ->  you can change  
    immutable ->  you can't chanage

###
    array
        let arr[];
        can have multiple type datatype

###
    type cohension
        12 + '12' = '1212'
        12 + +'12' = 24    
        20 - '12' = 8  
        12 * '12' = NaN     

###
    parseInt -> convert '123' to 123   also done '12a' -> 12
    Number -> convert '123' to 123   but not '12a' -> NaN 


###
    ==          -> only check value
    ===         -> check datatype , value   (prefered in industry)

    in case of spread operator (....a)
      then 
        ==         -> check value and refrence
        ===        -> chack value datatype and refrence

    same with 
        !=
        !==


###
    backtick -->  (` `)
    var msg = "byeee..."
    const str = `Hii msg is : ${msg}`;


###
    function    
        first read and then a new progaram is create in which there is function call 

        function print(x){
        console.log(x);
        }   

        var x = 20;
        print(x);

###
    Logical operator
        && 		|| 		!


###
    falsy value  
        0 false null undefined  NaN str=''


###
    switch case 



### 
    object
        key value pair 
        exp
            const obj = {
            name: "ashu",
            roll: 12,
            };

    to change object 
        obj.name = "sadfsf";


###
    alert   -> gave a message on page rendering 
    prompt  -> 
>>>>>>> 59a0b268195fbb671256444ba536d09bf9300fc8
    confirm -> 